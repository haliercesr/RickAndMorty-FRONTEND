{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, ORDER, FILTER } from './types';\nimport axios from 'axios';\nconst URL = 'http://localhost:3001/fav';\nexport const addFav = char => {\n  // es una accion asiNcrona y retornamos una funcion con dispatch\n  return function (dispatch) {\n    axios.post(`${URL}`, char) // le enviamos la url y necesitamos mandarle la informacion porque es un metodo POST que esta esperando un body, es este caso \"char\"\n    .then(_ref => {\n      let {\n        data\n      } = _ref;\n      // tenemos que poner axios.post porque si solo dejamos axios la peticion que llegara al servidor sera de axios.get\n      return dispatch({\n        type: ADD_FAV,\n        payload: data\n      });\n    });\n  };\n};\nexport const removeFav = id => {\n  //con esto logramos quitarle responsabilidad al frontend, la logica ya la hace nuestro servidor y el frontend la muestra, ahora vamos a modificar el reducer\n  return dispatch => {\n    axios.delete(`${URL}/${id}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      return dispatch({\n        type: REMOVE_FAV,\n        payload: data\n      });\n    });\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender //gender es la propiedad para filtrar como por ejemplo status, origin, etc.\n  };\n};\n\nexport const orderCards = orden => {\n  // orden sera a para ascendente y d para decendente\n  return {\n    type: ORDER,\n    payload: orden\n  };\n};","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","ORDER","FILTER","axios","URL","addFav","char","dispatch","post","then","_ref","data","type","payload","removeFav","id","delete","_ref2","filterCards","gender","orderCards","orden"],"sources":["/home/cesar/Documentos/Desarrollador-full-Stack/rick_and_morty/CLiente/src/components/redux/actions/actions.js"],"sourcesContent":["import{ADD_FAV,REMOVE_FAV,ORDER,FILTER} from './types'\nimport axios from 'axios';\n\nconst URL='http://localhost:3001/fav'\n\nexport const addFav=(char)=>{    // es una accion asiNcrona y retornamos una funcion con dispatch\n    return function(dispatch){\n        axios.post(`${URL}`, char)    // le enviamos la url y necesitamos mandarle la informacion porque es un metodo POST que esta esperando un body, es este caso \"char\"\n        .then(({data})=>{            // tenemos que poner axios.post porque si solo dejamos axios la peticion que llegara al servidor sera de axios.get\n            return dispatch(\n                {\n                    type: ADD_FAV,\n                    payload: data\n                }\n            )\n            })}\n    }\n\nexport const removeFav=(id)=>{        //con esto logramos quitarle responsabilidad al frontend, la logica ya la hace nuestro servidor y el frontend la muestra, ahora vamos a modificar el reducer\n    return (dispatch)=>{\n        axios.delete(`${URL}/${id}`)\n        .then(({data})=>{\n            return dispatch(   {\n                type: REMOVE_FAV,\n                payload: data\n            })\n        })\n     \n}\n}\n\nexport const filterCards=(gender)=>{\n    return {\n         type: FILTER,\n         payload: gender       //gender es la propiedad para filtrar como por ejemplo status, origin, etc.\n    }\n}\n\nexport const orderCards=(orden)=>{        // orden sera a para ascendente y d para decendente\n   return{\n    type: ORDER,\n    payload: orden\n   }\n}"],"mappings":"AAAA,SAAOA,OAAO,EAACC,UAAU,EAACC,KAAK,EAACC,MAAM,QAAO,SAAS;AACtD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAC,2BAA2B;AAErC,OAAO,MAAMC,MAAM,GAAEC,IAAI,IAAG;EAAK;EAC7B,OAAO,UAASC,QAAQ,EAAC;IACrBJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,GAAI,EAAC,EAAEE,IAAI,CAAC,CAAI;IAAA,CAC7BG,IAAI,CAACC,IAAA,IAAU;MAAA,IAAT;QAACC;MAAI,CAAC,GAAAD,IAAA;MAAgB;MACzB,OAAOH,QAAQ,CACX;QACIK,IAAI,EAAEb,OAAO;QACbc,OAAO,EAAEF;MACb,CAAC,CACJ;IACD,CAAC,CAAC;EAAA,CAAC;AACX,CAAC;AAEL,OAAO,MAAMG,SAAS,GAAEC,EAAE,IAAG;EAAS;EAClC,OAAQR,QAAQ,IAAG;IACfJ,KAAK,CAACa,MAAM,CAAE,GAAEZ,GAAI,IAAGW,EAAG,EAAC,CAAC,CAC3BN,IAAI,CAACQ,KAAA,IAAU;MAAA,IAAT;QAACN;MAAI,CAAC,GAAAM,KAAA;MACT,OAAOV,QAAQ,CAAI;QACfK,IAAI,EAAEZ,UAAU;QAChBa,OAAO,EAAEF;MACb,CAAC,CAAC;IACN,CAAC,CAAC;EAEV,CAAC;AACD,CAAC;AAED,OAAO,MAAMO,WAAW,GAAEC,MAAM,IAAG;EAC/B,OAAO;IACFP,IAAI,EAAEV,MAAM;IACZW,OAAO,EAAEM,MAAM,CAAO;EAC3B,CAAC;AACL,CAAC;;AAED,OAAO,MAAMC,UAAU,GAAEC,KAAK,IAAG;EAAS;EACvC,OAAM;IACLT,IAAI,EAAEX,KAAK;IACXY,OAAO,EAAEQ;EACV,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}