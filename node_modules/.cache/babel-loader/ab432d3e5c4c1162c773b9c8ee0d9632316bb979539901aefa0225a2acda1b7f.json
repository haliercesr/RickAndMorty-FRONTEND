{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"../actions/types\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  //nosotros en el frontend, el cliente antes hacia click en el corazon de una carta y se guardaba en favoritos en nuestro estado global\n  switch (type) {\n    //ahora nuestra action creator es asincrona (antes era sincrona) y puede ser asicrona gracias al redux-thunk que configuramos al principio, como se hace esto? en la misma funcion que esta recibiendo el personaje, una funcion que retorna otra funcion es un clausers o que estamos usando ahora.\n    case ADD_FAV:\n      // se hace una peticion post o delete con axios y los controadores de mi servidor hacen la logica para guardar y enviar los datos de las cartas favoritas\n      return {\n        ...state,\n        allCharacters: payload\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        allCharacters: payload\n      };\n    case FILTER:\n      return {\n        ...state,\n        allCharacters\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allCharacters","rootReducer","state","arguments","length","undefined","type","payload"],"sources":["/home/cesar/Documentos/Desarrollador-full-Stack/rick_and_morty/CLiente/src/components/redux/reducer/reducer.js"],"sourcesContent":["import { ADD_FAV,REMOVE_FAV,FILTER,ORDER } from \"../actions/types\"\n\n\nconst initialState= {\n    myFavorites : [],\n    allCharacters:[]\n}\n\nconst rootReducer=(state=initialState,{type,payload}) => {         //nosotros en el frontend, el cliente antes hacia click en el corazon de una carta y se guardaba en favoritos en nuestro estado global\n    switch(type){                                                  //ahora nuestra action creator es asincrona (antes era sincrona) y puede ser asicrona gracias al redux-thunk que configuramos al principio, como se hace esto? en la misma funcion que esta recibiendo el personaje, una funcion que retorna otra funcion es un clausers o que estamos usando ahora.\n        case ADD_FAV:                                              // se hace una peticion post o delete con axios y los controadores de mi servidor hacen la logica para guardar y enviar los datos de las cartas favoritas\n            return{\n                ...state, \n                allCharacters:payload\n            }\n        case REMOVE_FAV:\n            return{\n                ...state, \n                allCharacters:payload\n            }\n        case FILTER:\n            return{\n                ...state,\n                allCharacters\n            }\n        default:\n            return {...state}\n    }\n}\n\nexport default rootReducer;"],"mappings":"AAAA,SAASA,OAAO,EAACC,UAAU,EAACC,MAAM,EAACC,KAAK,QAAQ,kBAAkB;AAGlE,MAAMC,YAAY,GAAE;EAChBC,WAAW,EAAG,EAAE;EAChBC,aAAa,EAAC;AAClB,CAAC;AAED,MAAMC,WAAW,GAAC,SAAAA,CAAA,EAAuC;EAAA,IAAtCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACL,YAAY;EAAA,IAAC;IAACQ,IAAI;IAACC;EAAO,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAe;EAC/D,QAAOC,IAAI;IAAoD;IAC3D,KAAKZ,OAAO;MAA+C;MACvD,OAAM;QACF,GAAGQ,KAAK;QACRF,aAAa,EAACO;MAClB,CAAC;IACL,KAAKZ,UAAU;MACX,OAAM;QACF,GAAGO,KAAK;QACRF,aAAa,EAACO;MAClB,CAAC;IACL,KAAKX,MAAM;MACP,OAAM;QACF,GAAGM,KAAK;QACRF;MACJ,CAAC;IACL;MACI,OAAO;QAAC,GAAGE;MAAK,CAAC;EAAA;AAE7B,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}